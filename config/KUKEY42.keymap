#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tapdance_kana: tapdance_kana {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_KANA";
            #binding-cells = <0>;
            bindings = <&kp INT2>, <&kp LANGUAGE_2>, <&sl 2>;

            tapping-term-ms = <400>;
        };

        WheelScroll: WheelScroll {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "WHEELSCROLL";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W             &kp E         &kp R           &kp T                                          &kp Y      &kp U            &kp I        &kp O              &kp P
&kp A        &mt LEFT_SHIFT S  &mt LCTRL D   &mt LEFT_ALT F  &kp G      &kt LANGUAGE_1      &kp LANGUAGE_2  &kp H      &mt RIGHT_ALT J  &mt LCTRL K  &mt RIGHT_SHIFT L  &kp MINUS
&kp Z        &kp X             &kp C         &kp V           &kp B      &to 3               &kp DEL         &kp N      &kp M            &kp COMMA    &kp DOT            &kp SLASH
&kp LS(ESC)  &kp CAPSLOCK      &kp LEFT_WIN  &mo 3           &lt 1 TAB  &lt 2 SPACE         &kp BACKSPACE   &kp ENTER                                                   &to 1
            >;

            sensor-bindings = <&WheelScroll SCRL_DOWN SCRL_UP>;
        };

        MOUSE {
            bindings = <
&kp F12  &kp F11            &kp F10       &kp F9           &kp F8                        &kp PAGE_UP     &msc SCRL_UP  &mkp MCLK  &msc SCRL_DOWN  &kp HOME
&kp F7   &mt LEFT_SHIFT F6  &mt RCTRL F5  &mt LEFT_ALT F4  &kp F3  &kp F2      &mkp MB5  &kp PAGE_DOWN   &mkp LCLK     &kp UP     &mkp RCLK       &kp END
&none    &none              &none         &none            &none   &kp F1      &mkp MB4  &msc SCRL_LEFT  &kp LEFT      &kp DOWN   &kp RIGHT       &msc SCRL_RIGHT
&trans   &trans             &trans        &trans           &trans  &trans      &trans    &trans                                                   &to 0
            >;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN     &kp HASH   &kp DOLLAR    &kp PERCENT                             &kp CARET          &kp AMPERSAND        &kp ASTERISK     &kp LEFT_PARENTHESIS          &kp RIGHT_PARENTHESIS
&none            &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &none        &none       &kp SEMICOLON  &kp COLON          &mt RIGHT_ALT EQUAL  &mt RCTRL SLASH  &mt RIGHT_SHIFT LEFT_BRACKET  &kp RIGHT_BRACKET
&none            &none           &none      &none         &none        &none       &kp SQT        &kp DOUBLE_QUOTES  &kp PLUS             &kp QUESTION     &kp PIPE                      &kp BSLH
&trans           &trans          &trans     &trans        &trans       &trans      &trans         &trans                                                                                 &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        NUM {
            bindings = <
&none   &kp N7                   &kp N8        &kp N9                 &kp SLASH                                         &kp KP_SLASH     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS
&none   &mt LEFT_SHIFT NUMBER_4  &mt LCTRL N5  &mt LEFT_ALT NUMBER_6  &kp ASTERISK  &kp LANGUAGE_1      &kp LANGUAGE_2  &kp KP_ASTERISK  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS
&kp N0  &kp NUMBER_1             &kp NUMBER_2  &kp NUMBER_3           &kp DOT       &to 0               &kp DELETE      &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL
&trans  &trans                   &trans        &trans                 &trans        &trans              &trans          &trans                                                              &kp KP_NUMLOCK
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        ARROW {
            bindings = <
&kp AMPERSAND        &kp AT_SIGN       &kp RIGHT_BRACKET  &kp BACKSLASH  &kp LS(INTERNATIONAL_3)                                 &kp UNDER      &kp LC(KP_PLUS)  &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp PLUS
&kp MINUS            &kp LEFT_BRACKET  &kp EXCLAMATION    &kp QUESTION   &kp INT_YEN               &trans                &to 1   &kp PAGE_UP    &kp LC(MINUS)    &kp UP_ARROW    &kp CARET             &trans
&mt LEFT_SHIFT HASH  &kp PERCENT       &kp SINGLE_QUOTE   &kp SEMICOLON  &kp EQUAL                 &trans                &trans  &kp PAGE_DOWN  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW       &kp LS(INTERNATIONAL_1)
&trans               &trans            &trans             &trans         &mt LEFT_SHIFT LS(SPACE)  &lt 2 LANGUAGE_2      &trans  &trans                                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(KP_MINUS) LC(KP_PLUS)>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BT {
            bindings = <
&trans       &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans       &trans        &trans        &trans        &trans  &trans      &sys_reset   &trans        &trans        &trans        &trans        &trans
&trans       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&bootloader  &sys_reset    &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
